#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/un.h>
#include <unistd.h>
#include "Server.h"
#include <pthread.h>

typedef unsigned char byte;

//#define BUFFER_SIZE 4096
#define SOCKET_NAME "/tmp/dotnetsocket"

using namespace std;


//put in server
static bool isConnected = false;
/*
void* HandleConnection(void*)
{
    cout << "running new thread" << endl;
    server.Start();
    isConnected = true;
    
    
    cout << "finished waiting" << endl;
    server.Stop();
}
*/
int main(int argc, char**argv) {
    byte data[] = {123, 34, 97, 115, 115, 101, 109, 98, 108, 121, 78, 97, 109, 101, 34, 58, 34, 84, 101, 115, 116, 46, 83, 97, 109, 112, 108, 101, 67, 111, 109, 112, 111, 110, 101, 110, 116, 46, 83, 97, 109, 112, 108, 101, 44, 32, 84, 101, 115, 116, 46, 83, 97, 109, 112, 108, 101, 67, 111, 109, 112, 111, 110, 101, 110, 116, 44, 32, 86, 101, 114, 115, 105, 111, 110, 61, 49, 46, 48, 46, 48, 46, 48, 44, 32, 67, 117, 108, 116, 117, 114, 101, 61, 110, 101, 117, 116, 114, 97, 108, 44, 32, 80, 117, 98, 108, 105, 99, 75, 101, 121, 84, 111, 107, 101, 110, 61, 110, 117, 108, 108, 34, 44, 34, 97, 115, 115, 101, 109, 98, 108, 121, 80, 97, 116, 104, 34, 58, 34, 47, 104, 111, 109, 101, 47, 116, 101, 115, 116, 47, 68, 111, 99, 117, 109, 101, 110, 116, 115, 47, 77, 111, 110, 111, 69, 109, 98, 101, 100, 100, 101, 100, 47, 84, 101, 115, 116, 46, 83, 97, 109, 112, 108, 101, 67, 111, 109, 112, 111, 110, 101, 110, 116, 46, 100, 108, 108, 34, 44, 34, 105, 115, 83, 105, 110, 103, 108, 101, 116, 111, 110, 34, 58, 116, 114, 117, 101, 44, 34, 108, 111, 103, 34, 58, 116, 114, 117, 101, 44, 34, 109, 101, 116, 104, 111, 100, 78, 97, 109, 101, 34, 58, 34, 71, 101, 116, 66, 121, 116, 101, 115, 40, 83, 121, 115, 116, 101, 109, 46, 66, 121, 116, 101, 91, 93, 32, 100, 97, 116, 97, 41, 32, 45, 62, 32, 83, 121, 115, 116, 101, 109, 46, 66, 121, 116, 101, 91, 93, 34, 44, 34, 102, 117, 108, 108, 84, 114, 117, 115, 116, 34, 58, 116, 114, 117, 101, 44, 34, 110, 111, 116, 105, 102, 121, 69, 118, 101, 110, 116, 115, 34, 58, 102, 97, 108, 115, 101, 44, 34, 109, 101, 116, 104, 111, 100, 65, 114, 103, 117, 109, 101, 110, 116, 115, 34, 58, 123, 34, 95, 100, 97, 116, 97, 95, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 66, 121, 116, 101, 91, 93, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 87, 87, 86, 122, 76, 67, 66, 48, 97, 71, 108, 122, 73, 71, 49, 108, 99, 51, 78, 104, 90, 50, 85, 103, 97, 88, 77, 103, 90, 110, 74, 118, 98, 83, 66, 78, 100, 87, 120, 108, 73, 72, 74, 49, 98, 109, 53, 112, 98, 109, 99, 103, 98, 50, 52, 103, 86, 87, 74, 49, 98, 110, 82, 49, 76, 105, 52, 117, 34, 125, 125, 44, 34, 105, 110, 118, 111, 99, 97, 116, 105, 111, 110, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 34, 58, 123, 125, 44, 34, 115, 101, 115, 115, 105, 111, 110, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 34, 58, 123, 125, 44, 34, 111, 117, 116, 98, 111, 117, 110, 100, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 34, 58, 123, 125, 44, 34, 105, 110, 98, 111, 117, 110, 100, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 34, 58, 123, 34, 104, 116, 116, 112, 46, 118, 101, 114, 115, 105, 111, 110, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 72, 84, 84, 80, 47, 49, 46, 49, 34, 125, 44, 34, 97, 99, 99, 101, 112, 116, 45, 101, 110, 99, 111, 100, 105, 110, 103, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 103, 122, 105, 112, 44, 32, 100, 101, 102, 108, 97, 116, 101, 34, 125, 44, 34, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 107, 101, 101, 112, 45, 97, 108, 105, 118, 101, 34, 125, 44, 34, 104, 116, 116, 112, 46, 114, 101, 109, 111, 116, 101, 46, 97, 100, 100, 114, 101, 115, 115, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 52, 53, 57, 54, 54, 34, 125, 44, 34, 104, 116, 116, 112, 46, 117, 114, 105, 46, 112, 97, 114, 97, 109, 115, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 80, 97, 114, 97, 109, 101, 116, 101, 114, 77, 97, 112, 123, 91, 93, 125, 34, 125, 44, 34, 104, 116, 116, 112, 46, 114, 101, 108, 97, 116, 105, 118, 101, 46, 112, 97, 116, 104, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 47, 98, 121, 116, 101, 97, 114, 114, 97, 121, 34, 125, 44, 34, 104, 116, 116, 112, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 112, 97, 116, 104, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 47, 98, 121, 116, 101, 97, 114, 114, 97, 121, 34, 125, 44, 34, 104, 116, 116, 112, 46, 114, 101, 113, 117, 101, 115, 116, 46, 117, 114, 105, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 47, 98, 121, 116, 101, 97, 114, 114, 97, 121, 34, 125, 44, 34, 104, 116, 116, 112, 46, 109, 101, 116, 104, 111, 100, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 71, 69, 84, 34, 125, 44, 34, 104, 116, 116, 112, 46, 113, 117, 101, 114, 121, 46, 112, 97, 114, 97, 109, 115, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 80, 97, 114, 97, 109, 101, 116, 101, 114, 77, 97, 112, 123, 91, 93, 125, 34, 125, 44, 34, 104, 111, 115, 116, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 50, 34, 125, 44, 34, 97, 99, 99, 101, 112, 116, 45, 108, 97, 110, 103, 117, 97, 103, 101, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 101, 110, 45, 85, 83, 44, 101, 110, 59, 113, 61, 48, 46, 53, 34, 125, 44, 34, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 77, 111, 122, 105, 108, 108, 97, 47, 53, 46, 48, 32, 40, 88, 49, 49, 59, 32, 85, 98, 117, 110, 116, 117, 59, 32, 76, 105, 110, 117, 120, 32, 120, 56, 54, 95, 54, 52, 59, 32, 114, 118, 58, 52, 52, 46, 48, 41, 32, 71, 101, 99, 107, 111, 47, 50, 48, 49, 48, 48, 49, 48, 49, 32, 70, 105, 114, 101, 102, 111, 120, 47, 52, 52, 46, 48, 34, 125, 44, 34, 97, 99, 99, 101, 112, 116, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 116, 101, 120, 116, 47, 104, 116, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 104, 116, 109, 108, 43, 120, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 109, 108, 59, 113, 61, 48, 46, 57, 44, 42, 47, 42, 59, 113, 61, 48, 46, 56, 34, 125, 44, 34, 104, 116, 116, 112, 46, 115, 99, 104, 101, 109, 101, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 104, 116, 116, 112, 34, 125, 44, 34, 104, 116, 116, 112, 46, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 116, 104, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 47, 98, 121, 116, 101, 97, 114, 114, 97, 121, 34, 125, 44, 34, 104, 116, 116, 112, 46, 113, 117, 101, 114, 121, 46, 115, 116, 114, 105, 110, 103, 34, 58, 123, 34, 74, 110, 105, 95, 84, 121, 112, 101, 34, 58, 34, 83, 116, 114, 105, 110, 103, 34, 44, 34, 74, 110, 105, 95, 86, 97, 108, 117, 101, 34, 58, 34, 34, 125, 125, 125};
    
    std::string s( reinterpret_cast<char const*>(data) );
    
    printf("%s\n", "Starting server");
    
    printf("%i", getpid());
    
    Server server(SOCKET_NAME, "/home/test/Documents/MonoEmbedded");
    
    
    server.Start();
    isConnected = true;
    
    /*
    remote.sun_family = AF_UNIX;
    strcpy(remote.sun_path, "/tmp/test");
    len = strlen(remote.sun_path) + sizeof(remote.sun_family);
    if (connect(s, (struct sockaddr *)&remote, len) == -1) {
        perror("connect");
        exit(1);
    }
    
    cout << "enter message" << endl;
    char input[BUFFER_SIZE] = {};
    cin.getline(input, BUFFER_SIZE);
    
   // cout << input << endl;
    
    while(strcmp(input, "end") != 0)
    {
        cout << "enter id" << endl;
        char idIn[BUFFER_SIZE] = {};
        cin >> idIn; 
        int id = atoi(idIn);
        DTO buffer = DTO(id,input);
        
        //if (send(s, input, strlen(input), 0) == -1) {
        if (send(s, (void*)&buffer, sizeof(DTO), 0) == -1) {
            perror("send");
            exit(1);
        }

        //if ((t=recv(s, str, 100, 0)) > 0) {
        //    str[t] = '\0';
        //    printf("echo> %s", str);
        //} else {
        //    if (t < 0) perror("recv");
        //    else printf("Server closed connection\n");
        //    exit(1);
       // }
        
        cout << "enter message" << endl;
        
        cin.getline(input, BUFFER_SIZE);
    
        //cout << input << endl;
    }
    
    close(s);
    exit(0);
   // Server server("/tmp/test");
    
   // server.Start();
    
   // server.Stop();
    */
}

